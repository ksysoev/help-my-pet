// Code generated by mockery v2.50.4. DO NOT EDIT.

//go:build !compile

package core

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockPetProfileRepository is an autogenerated mock type for the PetProfileRepository type
type MockPetProfileRepository struct {
	mock.Mock
}

type MockPetProfileRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPetProfileRepository) EXPECT() *MockPetProfileRepository_Expecter {
	return &MockPetProfileRepository_Expecter{mock: &_m.Mock}
}

// GetCurrentProfile provides a mock function with given fields: ctx, userID
func (_m *MockPetProfileRepository) GetCurrentProfile(ctx context.Context, userID string) (*PetProfile, error) {
	ret := _m.Called(ctx, userID)

	if len(ret) == 0 {
		panic("no return value specified for GetCurrentProfile")
	}

	var r0 *PetProfile
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*PetProfile, error)); ok {
		return rf(ctx, userID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *PetProfile); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*PetProfile)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockPetProfileRepository_GetCurrentProfile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetCurrentProfile'
type MockPetProfileRepository_GetCurrentProfile_Call struct {
	*mock.Call
}

// GetCurrentProfile is a helper method to define mock.On call
//   - ctx context.Context
//   - userID string
func (_e *MockPetProfileRepository_Expecter) GetCurrentProfile(ctx interface{}, userID interface{}) *MockPetProfileRepository_GetCurrentProfile_Call {
	return &MockPetProfileRepository_GetCurrentProfile_Call{Call: _e.mock.On("GetCurrentProfile", ctx, userID)}
}

func (_c *MockPetProfileRepository_GetCurrentProfile_Call) Run(run func(ctx context.Context, userID string)) *MockPetProfileRepository_GetCurrentProfile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockPetProfileRepository_GetCurrentProfile_Call) Return(_a0 *PetProfile, _a1 error) *MockPetProfileRepository_GetCurrentProfile_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockPetProfileRepository_GetCurrentProfile_Call) RunAndReturn(run func(context.Context, string) (*PetProfile, error)) *MockPetProfileRepository_GetCurrentProfile_Call {
	_c.Call.Return(run)
	return _c
}

// SaveProfile provides a mock function with given fields: ctx, userID, profile
func (_m *MockPetProfileRepository) SaveProfile(ctx context.Context, userID string, profile *PetProfile) error {
	ret := _m.Called(ctx, userID, profile)

	if len(ret) == 0 {
		panic("no return value specified for SaveProfile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *PetProfile) error); ok {
		r0 = rf(ctx, userID, profile)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockPetProfileRepository_SaveProfile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveProfile'
type MockPetProfileRepository_SaveProfile_Call struct {
	*mock.Call
}

// SaveProfile is a helper method to define mock.On call
//   - ctx context.Context
//   - userID string
//   - profile *PetProfile
func (_e *MockPetProfileRepository_Expecter) SaveProfile(ctx interface{}, userID interface{}, profile interface{}) *MockPetProfileRepository_SaveProfile_Call {
	return &MockPetProfileRepository_SaveProfile_Call{Call: _e.mock.On("SaveProfile", ctx, userID, profile)}
}

func (_c *MockPetProfileRepository_SaveProfile_Call) Run(run func(ctx context.Context, userID string, profile *PetProfile)) *MockPetProfileRepository_SaveProfile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(*PetProfile))
	})
	return _c
}

func (_c *MockPetProfileRepository_SaveProfile_Call) Return(_a0 error) *MockPetProfileRepository_SaveProfile_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPetProfileRepository_SaveProfile_Call) RunAndReturn(run func(context.Context, string, *PetProfile) error) *MockPetProfileRepository_SaveProfile_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPetProfileRepository creates a new instance of MockPetProfileRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPetProfileRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPetProfileRepository {
	mock := &MockPetProfileRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
