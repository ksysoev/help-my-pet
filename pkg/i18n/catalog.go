// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package i18n

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"de_DE": &dictionary{index: de_DEIndex, data: de_DEData},
		"en_GB": &dictionary{index: en_GBIndex, data: en_GBData},
		"fr_CH": &dictionary{index: fr_CHIndex, data: fr_CHData},
	}
	fallback := language.MustParse("en-GB")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Please provide a date in the valid format YYYY-MM-DD (e.g., 2023-12-31)": 1,
	"Provided date cannot be in the future. Please provide a valid date.":     0,
}

var de_DEIndex = []uint32{ // 3 elements
	0x00000000, 0x00000000, 0x00000000,
} // Size: 36 bytes

const de_DEData string = ""

var en_GBIndex = []uint32{ // 3 elements
	0x00000000, 0x00000044, 0x0000008c,
} // Size: 36 bytes

const en_GBData string = "" + // Size: 140 bytes
	"\x02Provided date cannot be in the future. Please provide a valid date." +
	"\x02Please provide a date in the valid format YYYY-MM-DD (e.g., 2023-12-" +
	"31)"

var fr_CHIndex = []uint32{ // 3 elements
	0x00000000, 0x00000000, 0x00000000,
} // Size: 36 bytes

const fr_CHData string = ""

// Total table size 248 bytes (0KiB); checksum: D82415F7
